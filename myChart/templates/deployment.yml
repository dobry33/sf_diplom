apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
  labels:
    app: {{ .Release.Name }}
    component: {{ .Release.Namespace }}
    release: {{ .Release.Name }}
spec:
  replicas: {{.Values.replicas}}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      component: {{ .Release.Namespace }}
      release: {{ .Release.Name }}

  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        component: {{ .Release.Namespace }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: db
          nodeName: k8s-app
          image: postgres:13-alpine
          ports:
          - containerPort: {{.Values.db.containerPort}}
          env:
            - name: POSTGRES_DB
              value: {{.Values.env.POSTGRES_DB}}
            - name: POSTGRES_USER
              value: {{.Values.env.POSTGRES_USER}}
            - name: POSTGRES_PASSWORD
              value: {{.Values.env.POSTGRES_PASSWORD}}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: tutorial-volume

          readinessProbe:
            exec:
              command: ["psql", "-w","-U", "{{.Values.env.POSTGRES_USER}}", "-d","{{.Values.env.POSTGRES_DB}}","-c", "SELECT 1"]
            InitialsDelaySeconds: 10
            failureThreshold: 1
            periodSeconds: 10

        - name: app
          nodeName: k8s-app
          image: dobry33/pg-docker-tutorial:1.0
          ports:
          - containerPort: {{.Values.app.containerPort}}
          env:
            - name: DB_HOST
              value: {{.Values.env.DB_HOST}}
            - name: DB_NAME
              value: {{.Values.env.DB_NAME}}
            - name: DB_USER
              value: {{.Values.env.DB_USER}}
            - name: DB_PASS
              value: {{.Values.env.DB_PASS}}
          args: ["sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:3003"]
            
          volumeMounts:
            - mountPath: /app
              name: app-volume

      volumes:
        - name: tutorial-volume
          persistentVolumeClaim:
            claimName: tutorial-pvc
        - name: app-volume
          persistentVolumeClaim:
            claimName: app-pvc